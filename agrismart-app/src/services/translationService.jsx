import { translate } from "google-translate-api-x";

// Cache for translations to avoid repeated API calls
const translationCache = new Map();

// Complete offline translations for all supported languages
const OFFLINE_TRANSLATIONS = {
  hi: {
    // Navigation & Common
    welcome: "AgriSmart рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯСЛ",
    readyToOptimize: "рдЖрдЬ рдЕрдкрдиреА рдЦреЗрддреА рдХреЛ рдЕрдиреБрдХреВрд▓рд┐рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?",
    backToDashboard: "рдбреИрд╢рдмреЛрд░реНрдб рдкрд░ рд╡рд╛рдкрд╕ рдЬрд╛рдПрдВ",
    loading: "AI рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг...",
    analyzing: "рдЙрдиреНрдирдд рдПрд▓реНрдЧреЛрд░рд┐рджрдо рдХреЗ рд╕рд╛рде рдЖрдкрдХреЗ рдбреЗрдЯрд╛ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    agriSmart: "AgriSmart",
    smartAssistant: "рд╕реНрдорд╛рд░реНрдЯ рдЕрд╕рд┐рд╕реНрдЯреЗрдВрдЯ",
    
    // Dashboard Cards
    cropRecommendation: "рдлрд╕рд▓ рд╕рд┐рдлрд╛рд░рд┐рд╢",
    cropDescription: "AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдлрд╕рд▓ рдЪрдпрди рдФрд░ рд▓рд╛рдн рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    waterManagement: "рдЬрд▓ рдкреНрд░рдмрдВрдзрди",
    waterDescription: "рд╕реНрдорд╛рд░реНрдЯ рд╕рд┐рдВрдЪрд╛рдИ рдЕрдиреБрд╕реВрдЪреА рдФрд░ рдЕрдиреБрдХреВрд▓рди",
    pestDetection: "рдХреАрдЯ рдкрд╣рдЪрд╛рди",
    pestDescription: "рдЫрд╡рд┐-рдЖрдзрд╛рд░рд┐рдд рд░реЛрдЧ рдкрд╣рдЪрд╛рди рдФрд░ рдЙрдкрдЪрд╛рд░",
    
    // Form Fields
    location: "рд╕реНрдерд╛рди",
    selectDistrict: "рдЬрд┐рд▓рд╛ рдЪреБрдиреЗрдВ",
    farmSize: "рдЦреЗрдд рдХрд╛ рдЖрдХрд╛рд░",
    enterSizeInAcres: "рдПрдХрдбрд╝ рдореЗрдВ рдЖрдХрд╛рд░ рджрд░реНрдЬ рдХрд░реЗрдВ",
    getAIRecommendations: "AI рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
    cropType: "рдлрд╕рд▓ рдкреНрд░рдХрд╛рд░",
    selectCrop: "рдлрд╕рд▓ рдЪреБрдиреЗрдВ",
    growthStage: "рд╡рд┐рдХрд╛рд╕ рдЪрд░рдг",
    selectStage: "рдЪрд░рдг рдЪреБрдиреЗрдВ",
    generateWaterSchedule: "рдЬрд▓ рдЕрдиреБрд╕реВрдЪреА рдЙрддреНрдкрдиреНрди рдХрд░реЗрдВ",
    plantImage: "рдкреМрдзреЗ рдХреА рдЫрд╡рд┐",
    captureOrUpload: "рдЫрд╡рд┐ рдХреИрдкреНрдЪрд░ рдпрд╛ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
    supportedFormats: "JPG, PNG, WEBP рд╕рдорд░реНрдерд┐рдд",
    removeImage: "рдЫрд╡рд┐ рд╣рдЯрд╛рдПрдВ",
    analyzeWithAI: "AI рдХреЗ рд╕рд╛рде рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ",
    uploadImageFirst: "рдкрд╣рд▓реЗ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
    pleaseUploadImage: "рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
    
    // Crop Options
    wheat: "рдЧреЗрд╣реВрдВ",
    rice: "рдЪрд╛рд╡рд▓",
    mustard: "рд╕рд░рд╕реЛрдВ",
    tomato: "рдЯрдорд╛рдЯрд░",
    cotton: "рдХрдкрд╛рд╕",
    
    // Growth Stages
    sowing: "рдмреБрд╡рд╛рдИ",
    vegetative: "рд╡рд╛рдирд╕реНрдкрддрд┐рдХ",
    flowering: "рдлреВрд▓ рдЖрдирд╛",
    maturity: "рдкрд░рд┐рдкрдХреНрд╡рддрд╛",
    
    // Weather & Results
    currentWeather: "рд╡рд░реНрддрдорд╛рди рдореМрд╕рдо",
    temperature: "рддрд╛рдкрдорд╛рди",
    humidity: "рдЖрд░реНрджреНрд░рддрд╛",
    topRecommendations: "рд╢реАрд░реНрд╖ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
    expectedProfit: "рдЕрдкреЗрдХреНрд╖рд┐рдд рд▓рд╛рдн",
    marketPrice: "рдмрд╛рдЬрд╛рд░ рдореВрд▓реНрдп",
    yield: "рдЙрдкрдЬ",
    bestROI: "рдЖрдкрдХреЗ рдХреНрд╖реЗрддреНрд░ рдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ ROI рдлрд╕рд▓",
    highYieldPotential: "рдЙрдЪреНрдЪ рдЙрдкрдЬ рдХреНрд╖рдорддрд╛",
    stableReliable: "рд╕реНрдерд┐рд░ рдФрд░ рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рд╡рд┐рдХрд▓реНрдк",
    soilType: "рдорд┐рдЯреНрдЯреА рдХрд╛ рдкреНрд░рдХрд╛рд░",
    rainfall: "рд╡рд░реНрд╖рд╛",
    loamy: "рджреЛрдордЯ",
    
    // Results Pages
    cropAnalysisResults: "рдлрд╕рд▓ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдкрд░рд┐рдгрд╛рдо",
    cropAnalysisSubtitle: "рдЖрдкрдХреЗ рдЦреЗрдд рдХреЗ рд▓рд┐рдП AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
    farmOverview: "рдЦреЗрдд рдХрд╛ рдЕрд╡рд▓реЛрдХрди",
    waterManagementPlan: "рдЬрд▓ рдкреНрд░рдмрдВрдзрди рдпреЛрдЬрдирд╛",
    cropInformation: "рдлрд╕рд▓ рдХреА рдЬрд╛рдирдХрд╛рд░реА",
    waterRequirements: "рдЬрд▓ рдЖрд╡рд╢реНрдпрдХрддрд╛рдПрдВ",
    currentStageNeed: "рд╡рд░реНрддрдорд╛рди рдЪрд░рдг рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛",
    totalFarmDaily: "рдХреБрд▓ рдЦреЗрдд рджреИрдирд┐рдХ",
    weeklyRequirement: "рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рдЖрд╡рд╢реНрдпрдХрддрд╛",
    weatherForecast: "4-рджрд┐рди рдХрд╛ рдореМрд╕рдо рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди",
    today: "рдЖрдЬ",
    tomorrow: "рдХрд▓",
    smartIrrigationSchedule: "рд╕реНрдорд╛рд░реНрдЯ рд╕рд┐рдВрдЪрд╛рдИ рдЕрдиреБрд╕реВрдЪреА",
    irrigate: "рд╕рд┐рдВрдЪрд╛рдИ рдХрд░реЗрдВ",
    skipIrrigation: "рд╕рд┐рдВрдЪрд╛рдИ рдЫреЛрдбрд╝реЗрдВ",
    lightRainExpected: "рд╣рд▓реНрдХреА рдмрд╛рд░рд┐рд╢ рдХреА рдЙрдореНрдореАрдж",
    noRainForecast: "рдмрд╛рд░рд┐рд╢ рдХрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдирд╣реАрдВ",
    rainExpected: "рдмрд╛рд░рд┐рд╢ рдХреА рдЙрдореНрдореАрдж",
    smartTip: "рд╕реНрдорд╛рд░реНрдЯ рдЯрд┐рдк",
    smartTipText: "рдорд┐рдЯреНрдЯреА рдХреА рдирдореА рдХреЗ рд╕реНрддрд░ рдХреА рдирд┐рдЧрд░рд╛рдиреА рдХрд░реЗрдВ рдФрд░ рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдЦреЗрдд рдХреА рд╕реНрдерд┐рддрд┐ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рд╕рд┐рдВрдЪрд╛рдИ рдХреЛ рд╕рдорд╛рдпреЛрдЬрд┐рдд рдХрд░реЗрдВред рд╡рд╛рдирд╕реНрдкрддрд┐рдХ рдЪрд░рдг рдореЗрдВ рдмреЗрд╣рддрд░ рд╡рд┐рдХрд╛рд╕ рдХреЗ рд▓рд┐рдП рдирд┐рд░рдВрддрд░ рдирдореА рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛрддреА рд╣реИред",
    
    // Disease Analysis
    diseaseAnalysis: "рд░реЛрдЧ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
    diseaseAnalysisSubtitle: "AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рдкреМрдзреЗ рдХреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рдореВрд▓реНрдпрд╛рдВрдХрди",
    detectionResults: "рдкрд╣рдЪрд╛рди рдкрд░рд┐рдгрд╛рдо",
    identifiedCondition: "рдкрд╣рдЪрд╛рдиреА рдЧрдИ рд╕реНрдерд┐рддрд┐",
    diseaseFungalInfection: "рд░реЛрдЧ - рдлрдВрдЧрд▓ рд╕рдВрдХреНрд░рдордг",
    confidenceLevel: "рд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реНрддрд░",
    highConfidenceDetection: "рдЙрдЪреНрдЪ рд╡рд┐рд╢реНрд╡рд╛рд╕ рдкрд╣рдЪрд╛рди",
    treatmentOptions: "рдЙрдкрдЪрд╛рд░ рд╡рд┐рдХрд▓реНрдк",
    organic: "ЁЯМ┐ рдЬреИрд╡рд┐рдХ",
    chemical: "тЪЧя╕П рд░рд╛рд╕рд╛рдпрдирд┐рдХ",
    organicTreatment: "рдЬреИрд╡рд┐рдХ рдЙрдкрдЪрд╛рд░",
    organicTreatmentText: "рдиреАрдо рддреЗрд▓ рд╕реНрдкреНрд░реЗ, 5ml/L рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рдЖрд╡реЗрджрдиред рд╕реБрдмрд╣ рдЬрд▓реНрджреА рдпрд╛ рд╢рд╛рдо рдХреЛ рд▓рд╛рдЧреВ рдХрд░реЗрдВред",
    benefits: "рд▓рд╛рдн:",
    organicBenefits: "рдкрд░реНрдпрд╛рд╡рд░рдг рдХреЗ рд▓рд┐рдП рд╕реБрд░рдХреНрд╖рд┐рдд, рдХреЛрдИ рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдЕрд╡рд╢реЗрд╖ рдирд╣реАрдВ, рд▓рд╛рднрдХрд╛рд░реА рдХреАрдбрд╝реЗ рдмрдирд╛рдП рд░рдЦрддрд╛ рд╣реИ",
    chemicalTreatment: "рд░рд╛рд╕рд╛рдпрдирд┐рдХ рдЙрдкрдЪрд╛рд░",
    chemicalTreatmentText: "рдореИрдВрдХреЛрдЬреЗрдм рдХрд╡рдХрдирд╛рд╢реА, 2g/L рдкрд╛рдиреАред рд╣рд░ 7-10 рджрд┐рди рдореЗрдВ рд╕реНрдкреНрд░реЗ рдХрд░реЗрдВред",
    note: "рдиреЛрдЯ:",
    chemicalNote: "рд╕реБрд░рдХреНрд╖рд╛ рджрд┐рд╢рд╛рдирд┐рд░реНрджреЗрд╢реЛрдВ рдХрд╛ рдкрд╛рд▓рди рдХрд░реЗрдВ, рд╕реБрд░рдХреНрд╖рд╛рддреНрдордХ рдЙрдкрдХрд░рдг рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ, рдлрд╕рд▓-рдкреВрд░реНрд╡ рдЕрдВрддрд░рд╛рд▓ рдХрд╛ рдкрд╛рд▓рди рдХрд░реЗрдВ",
    preventionTips: "рд░реЛрдХрдерд╛рдо рдпреБрдХреНрддрд┐рдпрд╛рдВ",
    preventionText: "рд╕рдВрдХреНрд░рдорд┐рдд рдкрддреНрддрд┐рдпреЛрдВ рдХреЛ рддреБрд░рдВрдд рд╣рдЯрд╛ рджреЗрдВ, рдКрдкрд░реА рд╕рд┐рдВрдЪрд╛рдИ рд╕реЗ рдмрдЪреЗрдВ, рд╣рд╡рд╛ рдХреЗ рдкрд░рд┐рд╕рдВрдЪрд░рдг рдХреЗ рд▓рд┐рдП рдЙрдЪрд┐рдд рдкреМрдзреЗ рдХреА рджреВрд░реА рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ, рд╡рд╛рд░реНрд╖рд┐рдХ рдлрд╕рд▓ рдЪрдХреНрд░рдг рдХрд░реЗрдВред",
    actionPlan: "рдХрд╛рд░реНрдп рдпреЛрдЬрдирд╛",
    
    // Days and Dates
    friday: "рд╢реБрдХреНрд░рд╡рд╛рд░",
    saturday: "рд╢рдирд┐рд╡рд╛рд░",
    sunday: "рд░рд╡рд┐рд╡рд╛рд░",
    monday: "рд╕реЛрдорд╡рд╛рд░",
    tuesday: "рдордВрдЧрд▓рд╡рд╛рд░",
    wednesday: "рдмреБрдзрд╡рд╛рд░",
    thursday: "рдЧреБрд░реБрд╡рд╛рд░",
    sep6: "6 рд╕рд┐рддрдВрдмрд░",
    sep7: "7 рд╕рд┐рддрдВрдмрд░",
    sep8: "8 рд╕рд┐рддрдВрдмрд░",
    sep9: "9 рд╕рд┐рддрдВрдмрд░",
    
    // Locations
    hisarHaryana: "рд╣рд┐рд╕рд╛рд░, рд╣рд░рд┐рдпрд╛рдгрд╛",
    karnalHaryana: "рдХрд░рдирд╛рд▓, рд╣рд░рд┐рдпрд╛рдгрд╛",
    ludhianaPunjab: "рд▓реБрдзрд┐рдпрд╛рдирд╛, рдкрдВрдЬрд╛рдм",
    jaipurRajasthan: "рдЬрдпрдкреБрд░, рд░рд╛рдЬрд╕реНрдерд╛рди",
    
    // Units and Measurements
    acres: "рдПрдХрдбрд╝",
    liters: "рд▓реАрдЯрд░",
    perDay: "рдкреНрд░рддрд┐ рджрд┐рди",
    perWeek: "рдкреНрд░рддрд┐ рд╕рдкреНрддрд╛рд╣",
    celsius: "рд╕реЗрд▓реНрд╕рд┐рдпрд╕",
    percentage: "рдкреНрд░рддрд┐рд╢рдд",
    mm: "рдорд┐рдореА",
    
    // Action Steps
    actionSteps: [
      "рдЪрдпрдирд┐рдд рдЙрдкрдЪрд╛рд░ рддреБрд░рдВрдд рд▓рд╛рдЧреВ рдХрд░реЗрдВ",
      "1-2 рд╕рдкреНрддрд╛рд╣ рдХреЗ рд▓рд┐рдП рдкреМрдзреЛрдВ рдХреА рджреИрдирд┐рдХ рдирд┐рдЧрд░рд╛рдиреА рдХрд░реЗрдВ",
      "рдкреНрд░рднрд╛рд╡рд┐рдд рдкрддреНрддрд┐рдпреЛрдВ рдХреЛ рд╣рдЯрд╛рдПрдВ рдФрд░ рдирд┐рдкрдЯрд╛рди рдХрд░реЗрдВ",
      "рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдФрд░ рд╣рд╡рд╛ рдХреЗ рдкрд░рд┐рд╕рдВрдЪрд░рдг рдореЗрдВ рд╕реБрдзрд╛рд░ рдХрд░реЗрдВ",
      "рд╕реНрд╡рд╕реНрде рдкреМрдзреЛрдВ рдХреЗ рд▓рд┐рдП рдирд┐рд╡рд╛рд░рдХ рд╕реНрдкреНрд░реЗ рдкрд░ рд╡рд┐рдЪрд╛рд░ рдХрд░реЗрдВ"
    ]
  },
  
  // Add similar comprehensive translations for other languages...
  // For brevity, I'll show the pattern for Telugu as well
  
  te: {
    // Navigation & Common
    welcome: "AgriSmartр░Хр▒Б р░╕р▒Нр░╡р░╛р░Чр░др░В! ЁЯСЛ",
    readyToOptimize: "р░Ир░░р▒Лр░Ьр▒Б р░ор▒А р░╡р▒Нр░пр░╡р░╕р░╛р░пр░╛р░ир▒Нр░ир░┐ р░Жр░кр▒Нр░Яр░┐р░ор▒Ир░Ьр▒Н р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░╕р░┐р░жр▒Нр░зр░Вр░Чр░╛ р░Йр░ир▒Нр░ир░╛р░░р░╛?",
    backToDashboard: "р░бр░╛р░╖р▒НтАМр░мр▒Лр░░р▒Нр░бр▒НтАМр░Хр▒Б р░др░┐р░░р░┐р░Чр░┐ р░╡р▒Жр░│р▒Нр░▓р░Вр░бр░┐",
    loading: "AI р░кр▒Нр░░р░╛р░╕р▒Жр░╕р░┐р░Вр░Чр▒Н...",
    analyzing: "р░Ер░зр▒Бр░ир░╛р░др░и р░Ер░▓р▒Нр░Чр▒Лр░░р░┐р░ер░Вр░▓р░др▒Л р░ор▒А р░бр▒Зр░Яр░╛р░ир▒Б р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐",
    agriSmart: "AgriSmart",
    smartAssistant: "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░Ер░╕р░┐р░╕р▒Нр░Яр▒Жр░Вр░Яр▒Н",
    
    // Dashboard Cards
    cropRecommendation: "р░кр░Вр░Я р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Б",
    cropDescription: "AI-р░Жр░зр░╛р░░р░┐р░д р░кр░Вр░Я р░Ор░Вр░кр░┐р░Х & р░▓р░╛р░н р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г",
    waterManagement: "р░ир▒Ар░Яр░┐ р░ир░┐р░░р▒Нр░╡р░╣р░г",
    waterDescription: "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓ р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Н & р░Жр░кр▒Нр░Яр░┐р░ор▒Ир░Ьр▒Зр░╖р░ир▒Н",
    pestDetection: "р░Хр▒Ар░Яр░Х р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б",
    pestDescription: "р░Ър░┐р░др▒Нр░░-р░Жр░зр░╛р░░р░┐р░д р░╡р▒Нр░пр░╛р░зр░┐ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б & р░Ър░┐р░Хр░┐р░др▒Нр░╕",
    
    // Form Fields
    location: "р░╕р▒Нр░ер░╛р░ир░В",
    selectDistrict: "р░Ьр░┐р░▓р▒Нр░▓р░╛ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
    farmSize: "р░╡р▒Нр░пр░╡р░╕р░╛р░п р░нр▒Вр░ор░┐ р░кр░░р░┐р░ор░╛р░гр░В",
    enterSizeInAcres: "р░Ор░Хр░░р░╛р░▓р░▓р▒Л р░кр░░р░┐р░ор░╛р░гр░В р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐",
    getAIRecommendations: "AI р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р░ир▒Б р░кр▒Кр░Вр░жр░Вр░бр░┐",
    cropType: "р░кр░Вр░Я р░░р░Хр░В",
    selectCrop: "р░кр░Вр░Яр░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
    growthStage: "р░╡р▒Гр░жр▒Нр░зр░┐ р░жр░╢",
    selectStage: "р░жр░╢р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐",
    generateWaterSchedule: "р░ир▒Ар░Яр░┐ р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Н р░Йр░др▒Нр░кр░др▒Нр░др░┐ р░Ър▒Зр░пр░Вр░бр░┐",
    plantImage: "р░ор▒Кр░Хр▒Нр░Х р░Ър░┐р░др▒Нр░░р░В",
    captureOrUpload: "р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Хр▒Нр░пр░╛р░кр▒Нр░Ър░░р▒Н р░▓р▒Зр░жр░╛ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    supportedFormats: "JPG, PNG, WEBP р░ор░жр▒Нр░жр░др▒Б",
    removeImage: "р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐",
    analyzeWithAI: "AIр░др▒Л р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░┐р░Вр░Ър░Вр░бр░┐",
    uploadImageFirst: "р░ор▒Кр░жр░Я р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    pleaseUploadImage: "р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒Кр░жр░Я р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐",
    
    // Crop Options
    wheat: "р░Чр▒Лр░зр▒Бр░ор░▓р▒Б",
    rice: "р░╡р░░р░┐",
    mustard: "р░Жр░╡р░╛р░▓р▒Б",
    tomato: "р░Яр░ор░╛р░Я",
    cotton: "р░кр░др▒Нр░др░┐",
    
    // Growth Stages
    sowing: "р░╡р░┐р░др▒Нр░др░ир░В",
    vegetative: "р░╡р▒Гр░Хр▒Нр░╖",
    flowering: "р░кр▒Бр░╖р▒Нр░кр░┐р░Вр░Ър▒З",
    maturity: "р░кр░░р░┐р░кр░Хр▒Нр░╡р░д",
    
    // Weather & Results
    currentWeather: "р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╡р░╛р░др░╛р░╡р░░р░гр░В",
    temperature: "р░Йр░╖р▒Нр░гр▒Лр░Чр▒Нр░░р░д",
    humidity: "р░др▒Зр░о",
    topRecommendations: "р░Яр░╛р░кр▒Н р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б",
    expectedProfit: "р░Ер░Вр░Ър░ир░╛ р░▓р░╛р░нр░В",
    marketPrice: "р░ор░╛р░░р▒Нр░Хр▒Жр░Яр▒Н р░зр░░",
    yield: "р░кр░Вр░Я",
    bestROI: "р░ор▒А р░кр▒Нр░░р░╛р░Вр░др░╛р░ир░┐р░Хр░┐ р░Йр░др▒Нр░др░о ROI р░кр░Вр░Я",
    highYieldPotential: "р░Ер░зр░┐р░Х р░кр░Вр░Я р░╕р░╛р░ор░░р▒Нр░ер▒Нр░пр░В",
    stableReliable: "р░╕р▒Нр░ер░┐р░░р░ор▒Ир░и р░ор░░р░┐р░пр▒Б р░ир░ор▒Нр░ор░Хр░ор▒Ир░и р░Ор░Вр░кр░┐р░Х",
    soilType: "р░ир▒Зр░▓ р░░р░Хр░В",
    rainfall: "р░╡р░░р▒Нр░╖р░кр░╛р░др░В",
    loamy: "р░▓р▒Лр░ор▒А",
    
    // Results Pages
    cropAnalysisResults: "р░кр░Вр░Я р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г р░лр░▓р░┐р░др░╛р░▓р▒Б",
    cropAnalysisSubtitle: "р░ор▒А р░╡р▒Нр░пр░╡р░╕р░╛р░п р░нр▒Вр░ор░┐р░Хр░┐ AI-р░Жр░зр░╛р░░р░┐р░д р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б",
    farmOverview: "р░╡р▒Нр░пр░╡р░╕р░╛р░п р░нр▒Вр░ор░┐ р░Ер░╡р░▓р▒Лр░Хр░ир░В",
    waterManagementPlan: "р░ир▒Ар░Яр░┐ р░ир░┐р░░р▒Нр░╡р░╣р░г р░кр▒Нр░░р░гр░╛р░│р░┐р░Х",
    cropInformation: "р░кр░Вр░Я р░╕р░ор░╛р░Ър░╛р░░р░В",
    waterRequirements: "р░ир▒Ар░Яр░┐ р░Ер░╡р░╕р░░р░╛р░▓р▒Б",
    currentStageNeed: "р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░жр░╢ р░Ер░╡р░╕р░░р░В",
    totalFarmDaily: "р░ор▒Кр░др▒Нр░др░В р░╡р▒Нр░пр░╡р░╕р░╛р░п р░нр▒Вр░ор░┐ р░жр▒Ир░ир░┐р░Х",
    weeklyRequirement: "р░╡р░╛р░░р░кр▒Б р░Ер░╡р░╕р░░р░В",
    weatherForecast: "4-р░░р▒Лр░Ьр▒Бр░▓ р░╡р░╛р░др░╛р░╡р░░р░г р░╕р▒Вр░Ър░и",
    today: "р░Ир░░р▒Лр░Ьр▒Б",
    tomorrow: "р░░р▒Зр░кр▒Б",
    smartIrrigationSchedule: "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓ р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Н",
    irrigate: "р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓",
    skipIrrigation: "р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓ р░жр░╛р░Яр░╡р▒Зр░пр░Вр░бр░┐",
    lightRainExpected: "р░др▒Зр░▓р░┐р░Хр░кр░╛р░Яр░┐ р░╡р░░р▒Нр░╖р░В р░Ер░Вр░Ър░ир░╛",
    noRainForecast: "р░╡р░░р▒Нр░╖р░В р░╕р▒Вр░Ър░и р░▓р▒Зр░жр▒Б",
    rainExpected: "р░╡р░░р▒Нр░╖р░В р░Ер░Вр░Ър░ир░╛",
    smartTip: "р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░Ър░┐р░Яр▒Нр░Хр░╛",
    smartTipText: "р░ир▒Зр░▓ р░др▒Зр░о р░╕р▒Нр░ер░╛р░пр░┐р░▓р░ир▒Б р░кр░░р▒Нр░пр░╡р▒Зр░Хр▒Нр░╖р░┐р░Вр░Ър░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░╡р░╛р░╕р▒Нр░др░╡ р░кр▒Кр░▓р░В р░кр░░р░┐р░╕р▒Нр░ер░┐р░др▒Бр░▓ р░Жр░зр░╛р░░р░Вр░Чр░╛ р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓р░ир▒Б р░╕р░░р▒Нр░жр▒Бр░мр░╛р░Яр▒Б р░Ър▒Зр░пр░Вр░бр░┐ред р░╡р▒Гр░Хр▒Нр░╖ р░жр░╢р░Хр▒Б р░╕р░░р▒Ир░и р░╡р▒Гр░жр▒Нр░зр░┐р░Хр░┐ р░╕р▒Нр░ер░┐р░░р░ор▒Ир░и р░др▒Зр░о р░Ер░╡р░╕р░░р░В.",
    
    // Disease Analysis
    diseaseAnalysis: "р░╡р▒Нр░пр░╛р░зр░┐ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░г",
    diseaseAnalysisSubtitle: "AI-р░Жр░зр░╛р░░р░┐р░д р░ор▒Кр░Хр▒Нр░Х р░Жр░░р▒Лр░Чр▒Нр░п р░ор░жр░┐р░Вр░кр▒Б",
    detectionResults: "р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б р░лр░▓р░┐р░др░╛р░▓р▒Б",
    identifiedCondition: "р░Чр▒Бр░░р▒Нр░др░┐р░Вр░Ър░мр░бр░┐р░и р░кр░░р░┐р░╕р▒Нр░ер░┐р░др░┐",
    diseaseFungalInfection: "р░╡р▒Нр░пр░╛р░зр░┐ - р░лр░Вр░Чр░▓р▒Н р░Зр░ир▒Нр░лр▒Жр░Хр▒Нр░╖р░ир▒Н",
    confidenceLevel: "р░ир░ор▒Нр░ор░Хр░В р░╕р▒Нр░ер░╛р░пр░┐",
    highConfidenceDetection: "р░Ер░зр░┐р░Х р░ир░ор▒Нр░ор░Хр░В р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б",
    treatmentOptions: "р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ор░Вр░кр░┐р░Хр░▓р▒Б",
    organic: "ЁЯМ┐ р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п",
    chemical: "тЪЧя╕П р░░р░╕р░╛р░пр░и",
    organicTreatment: "р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п р░Ър░┐р░Хр░┐р░др▒Нр░╕",
    organicTreatmentText: "р░╡р▒Зр░к р░ир▒Вр░ир▒Ж р░╕р▒Нр░кр▒Нр░░р▒З, 5ml/L р░╡р░╛р░░р░кр▒Б р░Ер░кр▒Нр░▓р░┐р░Хр▒Зр░╖р░ир▒Н. р░Йр░жр░пр░В р░▓р▒Зр░жр░╛ р░╕р░╛р░пр░Вр░др▒Нр░░р░В р░╡р░░р▒Нр░др░┐р░Вр░Ър░Вр░бр░┐.",
    benefits: "р░▓р░╛р░нр░╛р░▓р▒Б:",
    organicBenefits: "р░кр░░р▒Нр░пр░╛р░╡р░░р░гр░╛р░ир░┐р░Хр░┐ р░╕р▒Бр░░р░Хр▒Нр░╖р░┐р░др░В, р░░р░╕р░╛р░пр░и р░Ер░╡р░╢р▒Зр░╖р░╛р░▓р▒Б р░▓р▒Зр░╡р▒Б, р░▓р░╛р░нр░Хр░░р░ор▒Ир░и р░Хр▒Ар░Яр░Хр░╛р░▓р░ир▒Б р░Хр░╛р░кр░╛р░бр▒Бр░др▒Бр░Вр░жр░┐",
    chemicalTreatment: "р░░р░╕р░╛р░пр░и р░Ър░┐р░Хр░┐р░др▒Нр░╕",
    chemicalTreatmentText: "р░ор░╛р░Вр░Хр▒Лр░Ьр▒Жр░мр▒Н р░лр░Вр░Чр░┐р░╕р▒Ир░бр▒Н, 2g/L р░ир▒Ар░░р▒Б. р░кр▒Нр░░р░др░┐ 7-10 р░░р▒Лр░Ьр▒Бр░▓р░Хр▒Б р░╕р▒Нр░кр▒Нр░░р▒З р░Ър▒Зр░пр░Вр░бр░┐.",
    note: "р░Чр░ор░ир░┐р░Х:",
    chemicalNote: "р░нр░жр▒Нр░░р░др░╛ р░ор░╛р░░р▒Нр░Чр░жр░░р▒Нр░╢р░Хр░╛р░▓р░ир▒Б р░Ер░ир▒Бр░╕р░░р░┐р░Вр░Ър░Вр░бр░┐, р░░р░Хр▒Нр░╖р░г р░кр░░р░┐р░Хр░░р░╛р░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр▒Вр░░р▒Нр░╡-р░Хр▒Лр░д р░Ер░Вр░др░░р░╛р░▓р░ир▒Б р░Чр░ор░ир░┐р░Вр░Ър░Вр░бр░┐",
    preventionTips: "р░ир░┐р░╡р░╛р░░р░г р░Ър░┐р░Яр▒Нр░Хр░╛р░▓р▒Б",
    preventionText: "р░╕р▒Лр░Хр░┐р░и р░Жр░Хр▒Бр░▓р░ир▒Б р░╡р▒Жр░Вр░Яр░ир▒З р░др▒Кр░▓р░Чр░┐р░Вр░Ър░Вр░бр░┐, р░кр▒Ир░и р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓р░ир▒Б р░ир░┐р░╡р░╛р░░р░┐р░Вр░Ър░Вр░бр░┐, р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░г р░Хр▒Лр░╕р░В р░╕р░░р▒Ир░и р░ор▒Кр░Хр▒Нр░Хр░▓ р░Ер░Вр░др░░р░В р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░Вр░бр░┐, р░╡р░╛р░░р▒Нр░╖р░┐р░Х р░кр░Вр░Яр░▓ р░ор░╛р░░р▒Нр░кр░┐р░бр░┐ р░Ър▒Зр░пр░Вр░бр░┐.",
    actionPlan: "р░Ър░░р▒Нр░п р░кр▒Нр░░р░гр░╛р░│р░┐р░Х",
    
    // Days and Dates
    friday: "р░╢р▒Бр░Хр▒Нр░░р░╡р░╛р░░р░В",
    saturday: "р░╢р░ир░┐р░╡р░╛р░░р░В",
    sunday: "р░Жр░жр░┐р░╡р░╛р░░р░В",
    monday: "р░╕р▒Лр░ор░╡р░╛р░░р░В",
    tuesday: "р░ор░Вр░Чр░│р░╡р░╛р░░р░В",
    wednesday: "р░мр▒Бр░зр░╡р░╛р░░р░В",
    thursday: "р░Чр▒Бр░░р▒Бр░╡р░╛р░░р░В",
    sep6: "6 р░╕р▒Жр░кр▒Нр░Яр▒Жр░Вр░мр░░р▒Н",
    sep7: "7 р░╕р▒Жр░кр▒Нр░Яр▒Жр░Вр░мр░░р▒Н",
    
    // Units and Measurements
    acres: "р░Ор░Хр░░р░╛р░▓р▒Б",
    liters: "р░▓р▒Ар░Яр░░р▒Нр░▓р▒Б",
    perDay: "р░░р▒Лр░Ьр▒Бр░Хр▒Б",
    perWeek: "р░╡р░╛р░░р░╛р░ир░┐р░Хр░┐",
    celsius: "р░╕р▒Жр░▓р▒Нр░╕р░┐р░пр░╕р▒Н",
    percentage: "р░╢р░╛р░др░В",
    mm: "р░ор░┐р░ор▒А",
    
    // Action Steps
    actionSteps: [
      "р░Ор░Вр░Ър▒Бр░Хр▒Бр░ир▒Нр░и р░Ър░┐р░Хр░┐р░др▒Нр░╕р░ир▒Б р░╡р▒Жр░Вр░Яр░ир▒З р░╡р░░р▒Нр░др░┐р░Вр░Ър░Вр░бр░┐",
      "1-2 р░╡р░╛р░░р░╛р░▓ р░кр░╛р░Яр▒Б р░░р▒Лр░Ьр▒Бр░╡р░╛р░░р▒А р░ор▒Кр░Хр▒Нр░Хр░▓р░ир▒Б р░кр░░р▒Нр░пр░╡р▒Зр░Хр▒Нр░╖р░┐р░Вр░Ър░Вр░бр░┐",
      "р░кр▒Нр░░р░нр░╛р░╡р░┐р░д р░Жр░Хр▒Бр░▓р░ир▒Б р░др▒Кр░▓р░Чр░┐р░Вр░Ър░┐ р░кр░╛р░░р░╡р▒Зр░пр░Вр░бр░┐",
      "р░бр▒Нр░░р▒Ир░ир▒Зр░Ьр▒А р░ор░░р░┐р░пр▒Б р░Чр░╛р░▓р░┐ р░кр▒Нр░░р░╕р░░р░гр░ир▒Б р░ор▒Жр░░р▒Бр░Чр▒Бр░кр░░р░Ър░Вр░бр░┐",
      "р░Жр░░р▒Лр░Чр▒Нр░пр░Хр░░р░ор▒Ир░и р░ор▒Кр░Хр▒Нр░Хр░▓р░Хр▒Б р░ир░┐р░╡р░╛р░░р░г р░╕р▒Нр░кр▒Нр░░р▒Зр░ир░┐ р░кр░░р░┐р░Чр░гр░┐р░Вр░Ър░Вр░бр░┐"
    ]
  }
  
  // Note: You would need to add similar comprehensive translations for all other languages
  // (bn, ta, gu, mr, kn, ml, pa, or, as) following the same pattern
};

// Supported languages with their codes
export const SUPPORTED_LANGUAGES = {
  en: { name: "English", flag: "ЁЯЗ║ЁЯЗ╕", code: "en" },
  hi: { name: "рд╣рд┐рдиреНрджреА", flag: "ЁЯЗоЁЯЗ│", code: "hi" },
  te: { name: "р░др▒Жр░▓р▒Бр░Чр▒Б", flag: "ЁЯЗоЁЯЗ│", code: "te" },
  bn: { name: "ржмрж╛ржВрж▓рж╛", flag: "ЁЯЗоЁЯЗ│", code: "bn" },
  ta: { name: "родрооро┐ро┤рпН", flag: "ЁЯЗоЁЯЗ│", code: "ta" },
  gu: { name: "ркЧрлБркЬрк░рк╛ркдрлА", flag: "ЁЯЗоЁЯЗ│", code: "gu" },
  mr: { name: "рдорд░рд╛рдареА", flag: "ЁЯЗоЁЯЗ│", code: "mr" },
  kn: { name: "р▓Хр▓ир│Нр▓ир▓б", flag: "ЁЯЗоЁЯЗ│", code: "kn" },
  ml: { name: "р┤ор┤▓р┤пр┤╛р┤│р┤В", flag: "ЁЯЗоЁЯЗ│", code: "ml" },
  pa: { name: "рикрй░риЬри╛римрйА", flag: "ЁЯЗоЁЯЗ│", code: "pa" },
  or: { name: "рмУрмбрм╝рм┐рмЖ", flag: "ЁЯЗоЁЯЗ│", code: "or" },
  as: { name: "ржЕрж╕ржорзАржпрж╝рж╛", flag: "ЁЯЗоЁЯЗ│", code: "as" },
};

// Enhanced DEFAULT_TEXT with all possible text content
export const DEFAULT_TEXT = {
  // Navigation & Common
  welcome: "Welcome to AgriSmart! ЁЯСЛ",
  readyToOptimize: "Ready to optimize your farming today?",
  backToDashboard: "Back to Dashboard",
  loading: "AI Processing...",
  analyzing: "Analyzing your data with advanced algorithms",
  agriSmart: "AgriSmart",
  smartAssistant: "Smart Assistant",

  // Dashboard Cards
  cropRecommendation: "Crop Recommendation",
  cropDescription: "AI-powered crop selection & profit analysis",
  waterManagement: "Water Management",
  waterDescription: "Smart irrigation scheduling & optimization",
  pestDetection: "Pest Detection",
  pestDescription: "Image-based disease identification & treatment",

  // Form Fields
  location: "Location",
  selectDistrict: "Select District",
  farmSize: "Farm Size",
  enterSizeInAcres: "Enter size in acres",
  getAIRecommendations: "Get AI Recommendations",
  cropType: "Crop Type",
  selectCrop: "Select Crop",
  growthStage: "Growth Stage",
  selectStage: "Select Stage",
  generateWaterSchedule: "Generate Water Schedule",
  plantImage: "Plant Image",
  captureOrUpload: "Capture or Upload Image",
  supportedFormats: "JPG, PNG, WEBP supported",
  removeImage: "Remove Image",
  analyzeWithAI: "Analyze with AI",
  uploadImageFirst: "Upload Image First",
  pleaseUploadImage: "Please upload an image first",

  // Crop Options
  wheat: "Wheat",
  rice: "Rice",
  mustard: "Mustard",
  tomato: "Tomato",
  cotton: "Cotton",

  // Growth Stages
  sowing: "Sowing",
  vegetative: "Vegetative",
  flowering: "Flowering",
  maturity: "Maturity",

  // Weather & Results
  currentWeather: "Current Weather",
  temperature: "Temperature",
  humidity: "Humidity",
  topRecommendations: "Top Recommendations",
  expectedProfit: "Expected Profit",
  marketPrice: "Market Price",
  yield: "Yield",
  bestROI: "Best ROI crop for your region",
  highYieldPotential: "High yield potential",
  stableReliable: "Stable & reliable option",
  soilType: "Soil Type",
  rainfall: "Rainfall",
  loamy: "Loamy",

  // Results Pages
  cropAnalysisResults: "Crop Analysis Results",
  cropAnalysisSubtitle: "AI-powered recommendations for your farm",
  farmOverview: "Farm Overview",
  waterManagementPlan: "Water Management Plan",
  cropInformation: "Crop Information",
  waterRequirements: "Water Requirements",
  currentStageNeed: "Current Stage Need",
  totalFarmDaily: "Total Farm Daily",
  weeklyRequirement: "Weekly Requirement",
  weatherForecast: "4-Day Weather Forecast",
  today: "Today",
  tomorrow: "Tomorrow",
  smartIrrigationSchedule: "Smart Irrigation Schedule",
  irrigate: "Irrigate",
  skipIrrigation: "Skip irrigation",
  lightRainExpected: "Light rain expected",
  noRainForecast: "No rain forecast",
  rainExpected: "Rain expected",
  smartTip: "Smart Tip",
  smartTipText: "Monitor soil moisture levels and adjust irrigation based on actual field conditions. The vegetative stage requires consistent moisture for optimal growth.",

  // Disease Analysis
  diseaseAnalysis: "Disease Analysis",
  diseaseAnalysisSubtitle: "AI-powered plant health assessment",
  detectionResults: "Detection Results",
  identifiedCondition: "Identified Condition",
  diseaseFungalInfection: "Disease - Fungal Infection",
  confidenceLevel: "Confidence Level",
  highConfidenceDetection: "High confidence detection",
  treatmentOptions: "Treatment Options",
  organic: "ЁЯМ┐ Organic",
  chemical: "тЪЧя╕П Chemical",
  organicTreatment: "Organic Treatment",
  organicTreatmentText: "Neem oil spray, 5ml/L weekly application. Apply in early morning or evening.",
  benefits: "Benefits:",
  organicBenefits: "Safe for environment, no chemical residues, maintains beneficial insects",
  chemicalTreatment: "Chemical Treatment",
  chemicalTreatmentText: "Mancozeb fungicide, 2g/L water. Spray every 7-10 days.",
  note: "Note:",
  chemicalNote: "Follow safety guidelines, use protective equipment, observe pre-harvest intervals",
  preventionTips: "Prevention Tips",
  preventionText: "Remove infected leaves immediately, avoid overhead irrigation, ensure proper plant spacing for air circulation, rotate crops annually.",
  actionPlan: "Action Plan",

  // Days and Dates
  friday: "Friday",
  saturday: "Saturday",
  sunday: "Sunday",
  monday: "Monday",
  tuesday: "Tuesday",
  wednesday: "Wednesday",
  thursday: "Thursday",
  sep6: "Sep 6",
  sep7: "Sep 7",
  sep8: "Sep 8",
  sep9: "Sep 9",

  // Locations
  hisarHaryana: "Hisar, Haryana",
  karnalHaryana: "Karnal, Haryana",
  ludhianaPunjab: "Ludhiana, Punjab",
  jaipurRajasthan: "Jaipur, Rajasthan",

  // Disease Names
  tomatoEarlyBlight: "Tomato Early Blight",

  // Units and Measurements
  acres: "acres",
  liters: "liters",
  perDay: "per day",
  perWeek: "per week",
  celsius: "Celsius",
  percentage: "percentage",
  mm: "mm",

  // Action Steps
  actionSteps: [
    "Apply selected treatment immediately",
    "Monitor plants daily for 1-2 weeks",
    "Remove and dispose of affected leaves",
    "Improve drainage and air circulation",
    "Consider preventive spraying for healthy plants",
  ],

  // Additional common phrases
  selectOption: "Select Option",
  noDataAvailable: "No data available",
  error: "Error",
  success: "Success",
  processing: "Processing",
  completed: "Completed",
  pending: "Pending",
  retry: "Retry",
  cancel: "Cancel",
  confirm: "Confirm",
  save: "Save",
  edit: "Edit",
  delete: "Delete",
  view: "View",
  close: "Close",
  next: "Next",
  previous: "Previous",
  submit: "Submit",
  reset: "Reset",
};

// Function to translate text
export const translateText = async (text, targetLanguage = "en") => {
  // If target language is English, return original text
  if (targetLanguage === "en") {
    return text;
  }

  // Check cache first
  const cacheKey = `${text}_${targetLanguage}`;
  if (translationCache.has(cacheKey)) {
    return translationCache.get(cacheKey);
  }

  // For languages with offline support, use offline translations as primary method
  if (OFFLINE_TRANSLATIONS[targetLanguage]) {
    // Try exact match first
    const offlineText = OFFLINE_TRANSLATIONS[targetLanguage][text];
    if (offlineText) {
      translationCache.set(cacheKey, offlineText);
      return offlineText;
    }

    // Try to find the key in DEFAULT_TEXT and then translate it
    const textKey = Object.keys(DEFAULT_TEXT).find(key => DEFAULT_TEXT[key] === text);
    if (textKey && OFFLINE_TRANSLATIONS[targetLanguage][textKey]) {
      const translatedText = OFFLINE_TRANSLATIONS[targetLanguage][textKey];
      translationCache.set(cacheKey, translatedText);
      return translatedText;
    }

    // Try partial match for similar keys
    const lowerText = text.toLowerCase();
    for (const [key, value] of Object.entries(OFFLINE_TRANSLATIONS[targetLanguage])) {
      if (key.toLowerCase().includes(lowerText) || lowerText.includes(key.toLowerCase())) {
        translationCache.set(cacheKey, value);
        return value;
      }
    }

    // For offline-supported languages, return original text if no match found
    return text;
  }

  // For languages without offline support, try API
  try {
    const result = await translate(text, { to: targetLanguage });
    const translatedText = result.text;
    translationCache.set(cacheKey, translatedText);
    return translatedText;
  } catch (error) {
    console.warn(`Translation API failed for ${targetLanguage}:`, error.message);
    return text;
  }
};

// Function to translate all text content
export const translateAllText = async (textObject, targetLanguage = "en") => {
  if (targetLanguage === "en") {
    return textObject;
  }

  const translatedText = {};

  // Check if we have offline translations for this language
  const hasOfflineTranslations = OFFLINE_TRANSLATIONS[targetLanguage];

  if (hasOfflineTranslations) {
    // Use offline translations as primary source - no API calls needed
    for (const [key, value] of Object.entries(textObject)) {
      if (Array.isArray(value)) {
        // Handle arrays (like actionSteps) - use offline translations
        if (OFFLINE_TRANSLATIONS[targetLanguage][key] && Array.isArray(OFFLINE_TRANSLATIONS[targetLanguage][key])) {
          translatedText[key] = OFFLINE_TRANSLATIONS[targetLanguage][key];
        } else {
          translatedText[key] = value.map((item) => {
            // Try to find exact match in offline translations
            for (const [offlineKey, offlineValue] of Object.entries(OFFLINE_TRANSLATIONS[targetLanguage])) {
              if (typeof offlineValue === 'string' && 
                  (offlineValue.toLowerCase().includes(item.toLowerCase()) || 
                   item.toLowerCase().includes(offlineKey.toLowerCase()))) {
                return offlineValue;
              }
            }
            return item; // Return original if no match found
          });
        }
      } else {
        // Use offline translation if available, otherwise return original
        translatedText[key] = OFFLINE_TRANSLATIONS[targetLanguage][key] || value;
      }
    }
  } else {
    // For languages without offline support, use API translation
    for (const [key, value] of Object.entries(textObject)) {
      if (Array.isArray(value)) {
        // Handle arrays (like actionSteps)
        translatedText[key] = await Promise.all(
          value.map((item) => translateText(item, targetLanguage))
        );
      } else {
        translatedText[key] = await translateText(value, targetLanguage);
      }
    }
  }

  return translatedText;
};

// Helper function to get translated text by key
export const getTranslatedText = (key, targetLanguage = "en") => {
  if (targetLanguage === "en") {
    return DEFAULT_TEXT[key] || key;
  }

  if (OFFLINE_TRANSLATIONS[targetLanguage] && OFFLINE_TRANSLATIONS[targetLanguage][key]) {
    return OFFLINE_TRANSLATIONS[targetLanguage][key];
  }

  return DEFAULT_TEXT[key] || key;
};

// Function to get language name
export const getLanguageName = (code) => {
  return SUPPORTED_LANGUAGES[code]?.name || code;
};

// Function to get language flag
export const getLanguageFlag = (code) => {
  return SUPPORTED_LANGUAGES[code]?.flag || "ЁЯМР";
};